“Truthy” and “Falsy”
JavaScript is well known for its ‘loose’ treatment of data types. In actuality, JavaScript considers almost everything an object, since almost every possible value has a set of methods attached (valueOf, toString, etc). That said, typeof returns six possible values, suggesting that there are six top-level data types: boolean, number, string, object, function, and undefined. (A seventh, introduced in ES6, is left as an exercise for the reader.) JavaScript converts values between data types, as needed. For example, if()converts any value to a boolean, to decide which way to branch.



Most values are considered something and if converted to a boolean, equate to true. Only six values are considered nothing: false, 0, NaN, "", null, undefined; these six are “falsy”, because when converted to a boolean, they equate to false. All other values are “truthy”, including all functions, objects, non-0 numbers (e.g.: -Infinity) and non-empty strings (e.g.: "0" or "false").

Arrays Review
This chapter covered JavaScript arrays in more depth. We showed how to declare and initialize arrays, how to read from specific indices, and how to write values into arrays – both overwriting existing values, as well as writing into new index locations that likely extend an array’s length. We made significant use of the property .length that is present in every array, and we discussed how this property is usually (but not always) equal to the number of elements present in the array. Specifically, we mentioned that arrays can be sparse, which means we can configure an array so that certain index locations have not yet been written with any value (and hence contain undefined). We rehearsed numerous times the iteration of an array, using a FOR loop. We touched on the subject of function parameters that are passed by reference, and how that changes a function from purely returning advisory information to making permanent changes in the array (or another parameter). We did an exhaustive walkthrough of debugging FOR loops with arrays. Finally, we built on our new understanding of JavaScript data types, and discussed the values that (across type conversion) all equate to false – the six “falsy” values.